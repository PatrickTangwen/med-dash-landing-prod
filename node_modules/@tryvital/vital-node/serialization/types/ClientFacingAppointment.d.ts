/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from "..";
import * as Vital from "../../api";
import * as core from "../../core";
export declare const ClientFacingAppointment: core.serialization.ObjectSchema<serializers.ClientFacingAppointment.Raw, Vital.ClientFacingAppointment>;
export declare namespace ClientFacingAppointment {
    interface Raw {
        id: string;
        user_id: string;
        order_id: string;
        address: serializers.UsAddress.Raw;
        location: serializers.LngLat.Raw;
        start_at?: string | null;
        end_at?: string | null;
        iana_timezone?: string | null;
        type: serializers.AppointmentType.Raw;
        provider: serializers.AppointmentProvider.Raw;
        status: serializers.AppointmentStatus.Raw;
        provider_id: string;
        can_reschedule: boolean;
        event_status: serializers.AppointmentEventStatus.Raw;
        event_data?: Record<string, unknown> | null;
        events: serializers.ClientFacingAppointmentEvent.Raw[];
    }
}
