/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import * as Vital from "../../..";
export declare namespace Meal {
    interface Options {
        environment?: core.Supplier<environments.VitalEnvironment | string>;
        apiKey: core.Supplier<string>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
    }
}
export declare class Meal {
    protected readonly _options: Meal.Options;
    constructor(_options: Meal.Options);
    /**
     * Get user's meals
     * @throws {@link Vital.UnprocessableEntityError}
     *
     * @example
     *     await vital.meal.get("user-id", {
     *         startDate: "start-date"
     *     })
     */
    get(userId: string, request: Vital.MealGetRequest, requestOptions?: Meal.RequestOptions): Promise<Vital.ClientFacingMealResponse>;
}
