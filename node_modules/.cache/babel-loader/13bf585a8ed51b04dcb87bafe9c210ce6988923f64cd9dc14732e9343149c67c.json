{"ast":null,"code":"\"use strict\";\n\n/**\n * This file was auto-generated by Fern from our API Definition.\n */\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Link = void 0;\nconst environments = __importStar(require(\"../../../../environments\"));\nconst core = __importStar(require(\"../../../../core\"));\nconst Vital = __importStar(require(\"../../..\"));\nconst serializers = __importStar(require(\"../../../../serialization\"));\nconst url_join_1 = __importDefault(require(\"url-join\"));\nconst errors = __importStar(require(\"../../../../errors\"));\nclass Link {\n  constructor(_options) {\n    this._options = _options;\n  }\n  /**\n   * Endpoint to generate a user link token, to be used throughout the vital\n   * link process. The vital link token is a one time use token, that\n   * expires after 10 minutes. If you would like vital-link widget to launch\n   * with a specific provider, pass in a provider in the body. If you would\n   * like to redirect to a custom url after successful or error connection,\n   * pass in your own custom redirect_url parameter.\n   * @throws {@link Vital.UnprocessableEntityError}\n   */\n  token(request, requestOptions) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      const _response = yield core.fetcher({\n        url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.environment)) !== null && _a !== void 0 ? _a : environments.VitalEnvironment.Production, \"v2/link/token\"),\n        method: \"POST\",\n        headers: {\n          \"x-vital-api-key\": yield core.Supplier.get(this._options.apiKey),\n          \"X-Fern-Language\": \"JavaScript\",\n          \"X-Fern-SDK-Name\": \"@tryvital/vital-node\",\n          \"X-Fern-SDK-Version\": \"3.1.2\"\n        },\n        contentType: \"application/json\",\n        body: yield serializers.LinkTokenExchange.jsonOrThrow(request, {\n          unrecognizedObjectKeys: \"strip\"\n        }),\n        timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n        maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries\n      });\n      if (_response.ok) {\n        return yield serializers.LinkTokenExchangeResponse.parseOrThrow(_response.body, {\n          unrecognizedObjectKeys: \"passthrough\",\n          allowUnrecognizedUnionMembers: true,\n          allowUnrecognizedEnumValues: true,\n          breadcrumbsPrefix: [\"response\"]\n        });\n      }\n      if (_response.error.reason === \"status-code\") {\n        switch (_response.error.statusCode) {\n          case 422:\n            throw new Vital.UnprocessableEntityError(yield serializers.HttpValidationError.parseOrThrow(_response.error.body, {\n              unrecognizedObjectKeys: \"passthrough\",\n              allowUnrecognizedUnionMembers: true,\n              allowUnrecognizedEnumValues: true,\n              breadcrumbsPrefix: [\"response\"]\n            }));\n          default:\n            throw new errors.VitalError({\n              statusCode: _response.error.statusCode,\n              body: _response.error.body\n            });\n        }\n      }\n      switch (_response.error.reason) {\n        case \"non-json\":\n          throw new errors.VitalError({\n            statusCode: _response.error.statusCode,\n            body: _response.error.rawBody\n          });\n        case \"timeout\":\n          throw new errors.VitalTimeoutError();\n        case \"unknown\":\n          throw new errors.VitalError({\n            message: _response.error.errorMessage\n          });\n      }\n    });\n  }\n  /**\n   * @throws {@link Vital.UnprocessableEntityError}\n   */\n  isTokenValid(request, requestOptions) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      const _response = yield core.fetcher({\n        url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.environment)) !== null && _a !== void 0 ? _a : environments.VitalEnvironment.Production, \"v2/link/token/isValid\"),\n        method: \"POST\",\n        headers: {\n          \"x-vital-api-key\": yield core.Supplier.get(this._options.apiKey),\n          \"X-Fern-Language\": \"JavaScript\",\n          \"X-Fern-SDK-Name\": \"@tryvital/vital-node\",\n          \"X-Fern-SDK-Version\": \"3.1.2\"\n        },\n        contentType: \"application/json\",\n        body: yield serializers.LinkTokenBase.jsonOrThrow(request, {\n          unrecognizedObjectKeys: \"strip\"\n        }),\n        timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n        maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries\n      });\n      if (_response.ok) {\n        return yield serializers.link.isTokenValid.Response.parseOrThrow(_response.body, {\n          unrecognizedObjectKeys: \"passthrough\",\n          allowUnrecognizedUnionMembers: true,\n          allowUnrecognizedEnumValues: true,\n          breadcrumbsPrefix: [\"response\"]\n        });\n      }\n      if (_response.error.reason === \"status-code\") {\n        switch (_response.error.statusCode) {\n          case 422:\n            throw new Vital.UnprocessableEntityError(yield serializers.HttpValidationError.parseOrThrow(_response.error.body, {\n              unrecognizedObjectKeys: \"passthrough\",\n              allowUnrecognizedUnionMembers: true,\n              allowUnrecognizedEnumValues: true,\n              breadcrumbsPrefix: [\"response\"]\n            }));\n          default:\n            throw new errors.VitalError({\n              statusCode: _response.error.statusCode,\n              body: _response.error.body\n            });\n        }\n      }\n      switch (_response.error.reason) {\n        case \"non-json\":\n          throw new errors.VitalError({\n            statusCode: _response.error.statusCode,\n            body: _response.error.rawBody\n          });\n        case \"timeout\":\n          throw new errors.VitalTimeoutError();\n        case \"unknown\":\n          throw new errors.VitalError({\n            message: _response.error.errorMessage\n          });\n      }\n    });\n  }\n  /**\n   * Generate a token to invite a user of Vital mobile app to your team\n   * @throws {@link Vital.UnprocessableEntityError}\n   */\n  codeCreate(request, requestOptions) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      const {\n        userId,\n        expiresAt\n      } = request;\n      const _queryParams = {};\n      _queryParams[\"user_id\"] = userId;\n      if (expiresAt != null) {\n        _queryParams[\"expires_at\"] = expiresAt.toISOString();\n      }\n      const _response = yield core.fetcher({\n        url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.environment)) !== null && _a !== void 0 ? _a : environments.VitalEnvironment.Production, \"v2/link/code/create\"),\n        method: \"POST\",\n        headers: {\n          \"x-vital-api-key\": yield core.Supplier.get(this._options.apiKey),\n          \"X-Fern-Language\": \"JavaScript\",\n          \"X-Fern-SDK-Name\": \"@tryvital/vital-node\",\n          \"X-Fern-SDK-Version\": \"3.1.2\"\n        },\n        contentType: \"application/json\",\n        queryParameters: _queryParams,\n        timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n        maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries\n      });\n      if (_response.ok) {\n        return yield serializers.VitalTokenCreatedResponse.parseOrThrow(_response.body, {\n          unrecognizedObjectKeys: \"passthrough\",\n          allowUnrecognizedUnionMembers: true,\n          allowUnrecognizedEnumValues: true,\n          breadcrumbsPrefix: [\"response\"]\n        });\n      }\n      if (_response.error.reason === \"status-code\") {\n        switch (_response.error.statusCode) {\n          case 422:\n            throw new Vital.UnprocessableEntityError(yield serializers.HttpValidationError.parseOrThrow(_response.error.body, {\n              unrecognizedObjectKeys: \"passthrough\",\n              allowUnrecognizedUnionMembers: true,\n              allowUnrecognizedEnumValues: true,\n              breadcrumbsPrefix: [\"response\"]\n            }));\n          default:\n            throw new errors.VitalError({\n              statusCode: _response.error.statusCode,\n              body: _response.error.body\n            });\n        }\n      }\n      switch (_response.error.reason) {\n        case \"non-json\":\n          throw new errors.VitalError({\n            statusCode: _response.error.statusCode,\n            body: _response.error.rawBody\n          });\n        case \"timeout\":\n          throw new errors.VitalTimeoutError();\n        case \"unknown\":\n          throw new errors.VitalError({\n            message: _response.error.errorMessage\n          });\n      }\n    });\n  }\n  /**\n   * REQUEST_SOURCE: VITAL-LINK\n   * Start link token process\n   * @throws {@link Vital.UnprocessableEntityError}\n   */\n  startConnect(request, requestOptions) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      const _response = yield core.fetcher({\n        url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.environment)) !== null && _a !== void 0 ? _a : environments.VitalEnvironment.Production, \"v2/link/start\"),\n        method: \"POST\",\n        headers: {\n          \"x-vital-api-key\": yield core.Supplier.get(this._options.apiKey),\n          \"X-Fern-Language\": \"JavaScript\",\n          \"X-Fern-SDK-Name\": \"@tryvital/vital-node\",\n          \"X-Fern-SDK-Version\": \"3.1.2\"\n        },\n        contentType: \"application/json\",\n        body: yield serializers.BeginLinkTokenRequest.jsonOrThrow(request, {\n          unrecognizedObjectKeys: \"strip\"\n        }),\n        timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n        maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries\n      });\n      if (_response.ok) {\n        return yield serializers.link.startConnect.Response.parseOrThrow(_response.body, {\n          unrecognizedObjectKeys: \"passthrough\",\n          allowUnrecognizedUnionMembers: true,\n          allowUnrecognizedEnumValues: true,\n          breadcrumbsPrefix: [\"response\"]\n        });\n      }\n      if (_response.error.reason === \"status-code\") {\n        switch (_response.error.statusCode) {\n          case 422:\n            throw new Vital.UnprocessableEntityError(yield serializers.HttpValidationError.parseOrThrow(_response.error.body, {\n              unrecognizedObjectKeys: \"passthrough\",\n              allowUnrecognizedUnionMembers: true,\n              allowUnrecognizedEnumValues: true,\n              breadcrumbsPrefix: [\"response\"]\n            }));\n          default:\n            throw new errors.VitalError({\n              statusCode: _response.error.statusCode,\n              body: _response.error.body\n            });\n        }\n      }\n      switch (_response.error.reason) {\n        case \"non-json\":\n          throw new errors.VitalError({\n            statusCode: _response.error.statusCode,\n            body: _response.error.rawBody\n          });\n        case \"timeout\":\n          throw new errors.VitalTimeoutError();\n        case \"unknown\":\n          throw new errors.VitalError({\n            message: _response.error.errorMessage\n          });\n      }\n    });\n  }\n  /**\n   * REQUEST_SOURCE: VITAL-LINK\n   * Check link token state - can be hit continuously used as heartbeat\n   * @throws {@link Vital.UnprocessableEntityError}\n   *\n   * @example\n   *     await vital.link.tokenState({})\n   */\n  tokenState(request = {}, requestOptions) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      const {\n        vitalLinkToken\n      } = request;\n      const _response = yield core.fetcher({\n        url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.environment)) !== null && _a !== void 0 ? _a : environments.VitalEnvironment.Production, \"v2/link/state\"),\n        method: \"GET\",\n        headers: {\n          \"x-vital-api-key\": yield core.Supplier.get(this._options.apiKey),\n          \"X-Fern-Language\": \"JavaScript\",\n          \"X-Fern-SDK-Name\": \"@tryvital/vital-node\",\n          \"X-Fern-SDK-Version\": \"3.1.2\",\n          \"x-vital-link-token\": vitalLinkToken != null ? vitalLinkToken : undefined\n        },\n        contentType: \"application/json\",\n        timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n        maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries\n      });\n      if (_response.ok) {\n        return yield serializers.link.tokenState.Response.parseOrThrow(_response.body, {\n          unrecognizedObjectKeys: \"passthrough\",\n          allowUnrecognizedUnionMembers: true,\n          allowUnrecognizedEnumValues: true,\n          breadcrumbsPrefix: [\"response\"]\n        });\n      }\n      if (_response.error.reason === \"status-code\") {\n        switch (_response.error.statusCode) {\n          case 422:\n            throw new Vital.UnprocessableEntityError(yield serializers.HttpValidationError.parseOrThrow(_response.error.body, {\n              unrecognizedObjectKeys: \"passthrough\",\n              allowUnrecognizedUnionMembers: true,\n              allowUnrecognizedEnumValues: true,\n              breadcrumbsPrefix: [\"response\"]\n            }));\n          default:\n            throw new errors.VitalError({\n              statusCode: _response.error.statusCode,\n              body: _response.error.body\n            });\n        }\n      }\n      switch (_response.error.reason) {\n        case \"non-json\":\n          throw new errors.VitalError({\n            statusCode: _response.error.statusCode,\n            body: _response.error.rawBody\n          });\n        case \"timeout\":\n          throw new errors.VitalTimeoutError();\n        case \"unknown\":\n          throw new errors.VitalError({\n            message: _response.error.errorMessage\n          });\n      }\n    });\n  }\n  /**\n   * REQUEST_SOURCE: VITAL-LINK\n   * PROVIDER_TYPE: EMAIL-AUTH\n   * This function is hit by vital-link to authenticate a email provider.\n   * @throws {@link Vital.UnprocessableEntityError}\n   */\n  emailAuth(request, requestOptions) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      const {\n          vitalLinkToken\n        } = request,\n        _body = __rest(request, [\"vitalLinkToken\"]);\n      const _response = yield core.fetcher({\n        url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.environment)) !== null && _a !== void 0 ? _a : environments.VitalEnvironment.Production, \"v2/link/auth/email\"),\n        method: \"POST\",\n        headers: {\n          \"x-vital-api-key\": yield core.Supplier.get(this._options.apiKey),\n          \"X-Fern-Language\": \"JavaScript\",\n          \"X-Fern-SDK-Name\": \"@tryvital/vital-node\",\n          \"X-Fern-SDK-Version\": \"3.1.2\",\n          \"x-vital-link-token\": vitalLinkToken != null ? vitalLinkToken : undefined\n        },\n        contentType: \"application/json\",\n        body: yield serializers.EmailAuthLink.jsonOrThrow(_body, {\n          unrecognizedObjectKeys: \"strip\"\n        }),\n        timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n        maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries\n      });\n      if (_response.ok) {\n        return yield serializers.ConnectionStatus.parseOrThrow(_response.body, {\n          unrecognizedObjectKeys: \"passthrough\",\n          allowUnrecognizedUnionMembers: true,\n          allowUnrecognizedEnumValues: true,\n          breadcrumbsPrefix: [\"response\"]\n        });\n      }\n      if (_response.error.reason === \"status-code\") {\n        switch (_response.error.statusCode) {\n          case 422:\n            throw new Vital.UnprocessableEntityError(yield serializers.HttpValidationError.parseOrThrow(_response.error.body, {\n              unrecognizedObjectKeys: \"passthrough\",\n              allowUnrecognizedUnionMembers: true,\n              allowUnrecognizedEnumValues: true,\n              breadcrumbsPrefix: [\"response\"]\n            }));\n          default:\n            throw new errors.VitalError({\n              statusCode: _response.error.statusCode,\n              body: _response.error.body\n            });\n        }\n      }\n      switch (_response.error.reason) {\n        case \"non-json\":\n          throw new errors.VitalError({\n            statusCode: _response.error.statusCode,\n            body: _response.error.rawBody\n          });\n        case \"timeout\":\n          throw new errors.VitalTimeoutError();\n        case \"unknown\":\n          throw new errors.VitalError({\n            message: _response.error.errorMessage\n          });\n      }\n    });\n  }\n  /**\n   * REQUEST_SOURCE: VITAL-LINK\n   * PROVIDER_TYPE: PASSWORD-AUTH\n   * This function is hit by vital-link to authenticate a password provider.\n   * @throws {@link Vital.UnprocessableEntityError}\n   */\n  passwordAuth(request, requestOptions) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      const {\n          vitalLinkClientRegion,\n          vitalLinkToken\n        } = request,\n        _body = __rest(request, [\"vitalLinkClientRegion\", \"vitalLinkToken\"]);\n      const _response = yield core.fetcher({\n        url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.environment)) !== null && _a !== void 0 ? _a : environments.VitalEnvironment.Production, \"v2/link/auth\"),\n        method: \"POST\",\n        headers: {\n          \"x-vital-api-key\": yield core.Supplier.get(this._options.apiKey),\n          \"X-Fern-Language\": \"JavaScript\",\n          \"X-Fern-SDK-Name\": \"@tryvital/vital-node\",\n          \"X-Fern-SDK-Version\": \"3.1.2\",\n          \"x-vital-link-client-region\": vitalLinkClientRegion != null ? vitalLinkClientRegion : undefined,\n          \"x-vital-link-token\": vitalLinkToken != null ? vitalLinkToken : undefined\n        },\n        contentType: \"application/json\",\n        body: yield serializers.PasswordAuthLink.jsonOrThrow(_body, {\n          unrecognizedObjectKeys: \"strip\"\n        }),\n        timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n        maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries\n      });\n      if (_response.ok) {\n        return yield serializers.ConnectionStatus.parseOrThrow(_response.body, {\n          unrecognizedObjectKeys: \"passthrough\",\n          allowUnrecognizedUnionMembers: true,\n          allowUnrecognizedEnumValues: true,\n          breadcrumbsPrefix: [\"response\"]\n        });\n      }\n      if (_response.error.reason === \"status-code\") {\n        switch (_response.error.statusCode) {\n          case 422:\n            throw new Vital.UnprocessableEntityError(yield serializers.HttpValidationError.parseOrThrow(_response.error.body, {\n              unrecognizedObjectKeys: \"passthrough\",\n              allowUnrecognizedUnionMembers: true,\n              allowUnrecognizedEnumValues: true,\n              breadcrumbsPrefix: [\"response\"]\n            }));\n          default:\n            throw new errors.VitalError({\n              statusCode: _response.error.statusCode,\n              body: _response.error.body\n            });\n        }\n      }\n      switch (_response.error.reason) {\n        case \"non-json\":\n          throw new errors.VitalError({\n            statusCode: _response.error.statusCode,\n            body: _response.error.rawBody\n          });\n        case \"timeout\":\n          throw new errors.VitalTimeoutError();\n        case \"unknown\":\n          throw new errors.VitalError({\n            message: _response.error.errorMessage\n          });\n      }\n    });\n  }\n  /**\n   * This endpoint generates an OAuth link for oauth provider\n   * @throws {@link Vital.UnprocessableEntityError}\n   */\n  generateOauthLink(oauthProvider, request = {}, requestOptions) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      const {\n        vitalLinkToken\n      } = request;\n      const _response = yield core.fetcher({\n        url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.environment)) !== null && _a !== void 0 ? _a : environments.VitalEnvironment.Production, `v2/link/provider/oauth/${yield serializers.OAuthProviders.jsonOrThrow(oauthProvider)}`),\n        method: \"GET\",\n        headers: {\n          \"x-vital-api-key\": yield core.Supplier.get(this._options.apiKey),\n          \"X-Fern-Language\": \"JavaScript\",\n          \"X-Fern-SDK-Name\": \"@tryvital/vital-node\",\n          \"X-Fern-SDK-Version\": \"3.1.2\",\n          \"x-vital-link-token\": vitalLinkToken != null ? vitalLinkToken : undefined\n        },\n        contentType: \"application/json\",\n        timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n        maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries\n      });\n      if (_response.ok) {\n        return yield serializers.Source.parseOrThrow(_response.body, {\n          unrecognizedObjectKeys: \"passthrough\",\n          allowUnrecognizedUnionMembers: true,\n          allowUnrecognizedEnumValues: true,\n          breadcrumbsPrefix: [\"response\"]\n        });\n      }\n      if (_response.error.reason === \"status-code\") {\n        switch (_response.error.statusCode) {\n          case 422:\n            throw new Vital.UnprocessableEntityError(yield serializers.HttpValidationError.parseOrThrow(_response.error.body, {\n              unrecognizedObjectKeys: \"passthrough\",\n              allowUnrecognizedUnionMembers: true,\n              allowUnrecognizedEnumValues: true,\n              breadcrumbsPrefix: [\"response\"]\n            }));\n          default:\n            throw new errors.VitalError({\n              statusCode: _response.error.statusCode,\n              body: _response.error.body\n            });\n        }\n      }\n      switch (_response.error.reason) {\n        case \"non-json\":\n          throw new errors.VitalError({\n            statusCode: _response.error.statusCode,\n            body: _response.error.rawBody\n          });\n        case \"timeout\":\n          throw new errors.VitalTimeoutError();\n        case \"unknown\":\n          throw new errors.VitalError({\n            message: _response.error.errorMessage\n          });\n      }\n    });\n  }\n  /**\n   * This connects auth providers that are password based.\n   * @throws {@link Vital.UnprocessableEntityError}\n   */\n  connectPasswordProvider(provider, request, requestOptions) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      const {\n          vitalLinkClientRegion,\n          vitalLinkToken\n        } = request,\n        _body = __rest(request, [\"vitalLinkClientRegion\", \"vitalLinkToken\"]);\n      const _response = yield core.fetcher({\n        url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.environment)) !== null && _a !== void 0 ? _a : environments.VitalEnvironment.Production, `v2/link/provider/password/${yield serializers.PasswordProviders.jsonOrThrow(provider)}`),\n        method: \"POST\",\n        headers: {\n          \"x-vital-api-key\": yield core.Supplier.get(this._options.apiKey),\n          \"X-Fern-Language\": \"JavaScript\",\n          \"X-Fern-SDK-Name\": \"@tryvital/vital-node\",\n          \"X-Fern-SDK-Version\": \"3.1.2\",\n          \"x-vital-link-client-region\": vitalLinkClientRegion != null ? vitalLinkClientRegion : undefined,\n          \"x-vital-link-token\": vitalLinkToken != null ? vitalLinkToken : undefined\n        },\n        contentType: \"application/json\",\n        body: yield serializers.IndividualProviderData.jsonOrThrow(_body, {\n          unrecognizedObjectKeys: \"strip\"\n        }),\n        timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n        maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries\n      });\n      if (_response.ok) {\n        return yield serializers.ProviderLinkResponse.parseOrThrow(_response.body, {\n          unrecognizedObjectKeys: \"passthrough\",\n          allowUnrecognizedUnionMembers: true,\n          allowUnrecognizedEnumValues: true,\n          breadcrumbsPrefix: [\"response\"]\n        });\n      }\n      if (_response.error.reason === \"status-code\") {\n        switch (_response.error.statusCode) {\n          case 422:\n            throw new Vital.UnprocessableEntityError(yield serializers.HttpValidationError.parseOrThrow(_response.error.body, {\n              unrecognizedObjectKeys: \"passthrough\",\n              allowUnrecognizedUnionMembers: true,\n              allowUnrecognizedEnumValues: true,\n              breadcrumbsPrefix: [\"response\"]\n            }));\n          default:\n            throw new errors.VitalError({\n              statusCode: _response.error.statusCode,\n              body: _response.error.body\n            });\n        }\n      }\n      switch (_response.error.reason) {\n        case \"non-json\":\n          throw new errors.VitalError({\n            statusCode: _response.error.statusCode,\n            body: _response.error.rawBody\n          });\n        case \"timeout\":\n          throw new errors.VitalTimeoutError();\n        case \"unknown\":\n          throw new errors.VitalError({\n            message: _response.error.errorMessage\n          });\n      }\n    });\n  }\n  /**\n   * This connects auth providers that are email based.\n   * @throws {@link Vital.UnprocessableEntityError}\n   */\n  connectEmailAuthProvider(provider, request, requestOptions) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      const {\n          vitalLinkToken\n        } = request,\n        _body = __rest(request, [\"vitalLinkToken\"]);\n      const _response = yield core.fetcher({\n        url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.environment)) !== null && _a !== void 0 ? _a : environments.VitalEnvironment.Production, `v2/link/provider/email/${yield serializers.EmailProviders.jsonOrThrow(provider)}`),\n        method: \"POST\",\n        headers: {\n          \"x-vital-api-key\": yield core.Supplier.get(this._options.apiKey),\n          \"X-Fern-Language\": \"JavaScript\",\n          \"X-Fern-SDK-Name\": \"@tryvital/vital-node\",\n          \"X-Fern-SDK-Version\": \"3.1.2\",\n          \"x-vital-link-token\": vitalLinkToken != null ? vitalLinkToken : undefined\n        },\n        contentType: \"application/json\",\n        body: yield serializers.EmailProviderAuthLink.jsonOrThrow(_body, {\n          unrecognizedObjectKeys: \"strip\"\n        }),\n        timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n        maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries\n      });\n      if (_response.ok) {\n        return yield serializers.ConnectionStatus.parseOrThrow(_response.body, {\n          unrecognizedObjectKeys: \"passthrough\",\n          allowUnrecognizedUnionMembers: true,\n          allowUnrecognizedEnumValues: true,\n          breadcrumbsPrefix: [\"response\"]\n        });\n      }\n      if (_response.error.reason === \"status-code\") {\n        switch (_response.error.statusCode) {\n          case 422:\n            throw new Vital.UnprocessableEntityError(yield serializers.HttpValidationError.parseOrThrow(_response.error.body, {\n              unrecognizedObjectKeys: \"passthrough\",\n              allowUnrecognizedUnionMembers: true,\n              allowUnrecognizedEnumValues: true,\n              breadcrumbsPrefix: [\"response\"]\n            }));\n          default:\n            throw new errors.VitalError({\n              statusCode: _response.error.statusCode,\n              body: _response.error.body\n            });\n        }\n      }\n      switch (_response.error.reason) {\n        case \"non-json\":\n          throw new errors.VitalError({\n            statusCode: _response.error.statusCode,\n            body: _response.error.rawBody\n          });\n        case \"timeout\":\n          throw new errors.VitalTimeoutError();\n        case \"unknown\":\n          throw new errors.VitalError({\n            message: _response.error.errorMessage\n          });\n      }\n    });\n  }\n  /**\n   * GET List of all available providers given the generated link token.\n   * @throws {@link Vital.UnprocessableEntityError}\n   *\n   * @example\n   *     await vital.link.getAllProviders({})\n   */\n  getAllProviders(request = {}, requestOptions) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      const {\n        vitalLinkToken\n      } = request;\n      const _response = yield core.fetcher({\n        url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.environment)) !== null && _a !== void 0 ? _a : environments.VitalEnvironment.Production, \"v2/link/providers\"),\n        method: \"GET\",\n        headers: {\n          \"x-vital-api-key\": yield core.Supplier.get(this._options.apiKey),\n          \"X-Fern-Language\": \"JavaScript\",\n          \"X-Fern-SDK-Name\": \"@tryvital/vital-node\",\n          \"X-Fern-SDK-Version\": \"3.1.2\",\n          \"x-vital-link-token\": vitalLinkToken != null ? vitalLinkToken : undefined\n        },\n        contentType: \"application/json\",\n        timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n        maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries\n      });\n      if (_response.ok) {\n        return yield serializers.link.getAllProviders.Response.parseOrThrow(_response.body, {\n          unrecognizedObjectKeys: \"passthrough\",\n          allowUnrecognizedUnionMembers: true,\n          allowUnrecognizedEnumValues: true,\n          breadcrumbsPrefix: [\"response\"]\n        });\n      }\n      if (_response.error.reason === \"status-code\") {\n        switch (_response.error.statusCode) {\n          case 422:\n            throw new Vital.UnprocessableEntityError(yield serializers.HttpValidationError.parseOrThrow(_response.error.body, {\n              unrecognizedObjectKeys: \"passthrough\",\n              allowUnrecognizedUnionMembers: true,\n              allowUnrecognizedEnumValues: true,\n              breadcrumbsPrefix: [\"response\"]\n            }));\n          default:\n            throw new errors.VitalError({\n              statusCode: _response.error.statusCode,\n              body: _response.error.body\n            });\n        }\n      }\n      switch (_response.error.reason) {\n        case \"non-json\":\n          throw new errors.VitalError({\n            statusCode: _response.error.statusCode,\n            body: _response.error.rawBody\n          });\n        case \"timeout\":\n          throw new errors.VitalTimeoutError();\n        case \"unknown\":\n          throw new errors.VitalError({\n            message: _response.error.errorMessage\n          });\n      }\n    });\n  }\n  /**\n   * REQUEST_SOURCE: CUSTOMER\n   * PROVIDER_TYPE: MANUAL-PROVIDER\n   * This connects auth providers that are password based.\n   * @throws {@link Vital.UnprocessableEntityError}\n   */\n  connectManualProvider(provider, request, requestOptions) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      const _response = yield core.fetcher({\n        url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.environment)) !== null && _a !== void 0 ? _a : environments.VitalEnvironment.Production, `v2/link/provider/manual/${yield serializers.ManualProviders.jsonOrThrow(provider)}`),\n        method: \"POST\",\n        headers: {\n          \"x-vital-api-key\": yield core.Supplier.get(this._options.apiKey),\n          \"X-Fern-Language\": \"JavaScript\",\n          \"X-Fern-SDK-Name\": \"@tryvital/vital-node\",\n          \"X-Fern-SDK-Version\": \"3.1.2\"\n        },\n        contentType: \"application/json\",\n        body: yield serializers.ManualConnectionData.jsonOrThrow(request, {\n          unrecognizedObjectKeys: \"strip\"\n        }),\n        timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n        maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries\n      });\n      if (_response.ok) {\n        return yield serializers.link.connectManualProvider.Response.parseOrThrow(_response.body, {\n          unrecognizedObjectKeys: \"passthrough\",\n          allowUnrecognizedUnionMembers: true,\n          allowUnrecognizedEnumValues: true,\n          breadcrumbsPrefix: [\"response\"]\n        });\n      }\n      if (_response.error.reason === \"status-code\") {\n        switch (_response.error.statusCode) {\n          case 422:\n            throw new Vital.UnprocessableEntityError(yield serializers.HttpValidationError.parseOrThrow(_response.error.body, {\n              unrecognizedObjectKeys: \"passthrough\",\n              allowUnrecognizedUnionMembers: true,\n              allowUnrecognizedEnumValues: true,\n              breadcrumbsPrefix: [\"response\"]\n            }));\n          default:\n            throw new errors.VitalError({\n              statusCode: _response.error.statusCode,\n              body: _response.error.body\n            });\n        }\n      }\n      switch (_response.error.reason) {\n        case \"non-json\":\n          throw new errors.VitalError({\n            statusCode: _response.error.statusCode,\n            body: _response.error.rawBody\n          });\n        case \"timeout\":\n          throw new errors.VitalTimeoutError();\n        case \"unknown\":\n          throw new errors.VitalError({\n            message: _response.error.errorMessage\n          });\n      }\n    });\n  }\n  /**\n   * POST Connect the given Vital user to a demo provider.\n   * @throws {@link Vital.UnprocessableEntityError}\n   */\n  connectDemoProvider(request, requestOptions) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      const _response = yield core.fetcher({\n        url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.environment)) !== null && _a !== void 0 ? _a : environments.VitalEnvironment.Production, \"v2/link/connect/demo\"),\n        method: \"POST\",\n        headers: {\n          \"x-vital-api-key\": yield core.Supplier.get(this._options.apiKey),\n          \"X-Fern-Language\": \"JavaScript\",\n          \"X-Fern-SDK-Name\": \"@tryvital/vital-node\",\n          \"X-Fern-SDK-Version\": \"3.1.2\"\n        },\n        contentType: \"application/json\",\n        body: yield serializers.DemoConnectionCreationPayload.jsonOrThrow(request, {\n          unrecognizedObjectKeys: \"strip\"\n        }),\n        timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n        maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries\n      });\n      if (_response.ok) {\n        return yield serializers.DemoConnectionStatus.parseOrThrow(_response.body, {\n          unrecognizedObjectKeys: \"passthrough\",\n          allowUnrecognizedUnionMembers: true,\n          allowUnrecognizedEnumValues: true,\n          breadcrumbsPrefix: [\"response\"]\n        });\n      }\n      if (_response.error.reason === \"status-code\") {\n        switch (_response.error.statusCode) {\n          case 422:\n            throw new Vital.UnprocessableEntityError(yield serializers.HttpValidationError.parseOrThrow(_response.error.body, {\n              unrecognizedObjectKeys: \"passthrough\",\n              allowUnrecognizedUnionMembers: true,\n              allowUnrecognizedEnumValues: true,\n              breadcrumbsPrefix: [\"response\"]\n            }));\n          default:\n            throw new errors.VitalError({\n              statusCode: _response.error.statusCode,\n              body: _response.error.body\n            });\n        }\n      }\n      switch (_response.error.reason) {\n        case \"non-json\":\n          throw new errors.VitalError({\n            statusCode: _response.error.statusCode,\n            body: _response.error.rawBody\n          });\n        case \"timeout\":\n          throw new errors.VitalTimeoutError();\n        case \"unknown\":\n          throw new errors.VitalError({\n            message: _response.error.errorMessage\n          });\n      }\n    });\n  }\n}\nexports.Link = Link;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","done","then","apply","__rest","s","t","p","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","__importDefault","exports","Link","environments","require","core","Vital","serializers","url_join_1","errors","constructor","_options","token","request","requestOptions","_a","_response","fetcher","url","default","Supplier","environment","VitalEnvironment","Production","method","headers","apiKey","contentType","body","LinkTokenExchange","jsonOrThrow","unrecognizedObjectKeys","timeoutMs","timeoutInSeconds","maxRetries","ok","LinkTokenExchangeResponse","parseOrThrow","allowUnrecognizedUnionMembers","allowUnrecognizedEnumValues","breadcrumbsPrefix","error","reason","statusCode","UnprocessableEntityError","HttpValidationError","VitalError","rawBody","VitalTimeoutError","message","errorMessage","isTokenValid","LinkTokenBase","link","Response","codeCreate","userId","expiresAt","_queryParams","toISOString","queryParameters","VitalTokenCreatedResponse","startConnect","BeginLinkTokenRequest","tokenState","vitalLinkToken","emailAuth","_body","EmailAuthLink","ConnectionStatus","passwordAuth","vitalLinkClientRegion","PasswordAuthLink","generateOauthLink","oauthProvider","OAuthProviders","Source","connectPasswordProvider","provider","PasswordProviders","IndividualProviderData","ProviderLinkResponse","connectEmailAuthProvider","EmailProviders","EmailProviderAuthLink","getAllProviders","connectManualProvider","ManualProviders","ManualConnectionData","connectDemoProvider","DemoConnectionCreationPayload","DemoConnectionStatus"],"sources":["/Users/tangwenhua/Desktop/dsc180-product/dashboard-website/node_modules/@tryvital/vital-node/api/resources/link/client/Client.js"],"sourcesContent":["\"use strict\";\n/**\n * This file was auto-generated by Fern from our API Definition.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Link = void 0;\nconst environments = __importStar(require(\"../../../../environments\"));\nconst core = __importStar(require(\"../../../../core\"));\nconst Vital = __importStar(require(\"../../..\"));\nconst serializers = __importStar(require(\"../../../../serialization\"));\nconst url_join_1 = __importDefault(require(\"url-join\"));\nconst errors = __importStar(require(\"../../../../errors\"));\nclass Link {\n    constructor(_options) {\n        this._options = _options;\n    }\n    /**\n     * Endpoint to generate a user link token, to be used throughout the vital\n     * link process. The vital link token is a one time use token, that\n     * expires after 10 minutes. If you would like vital-link widget to launch\n     * with a specific provider, pass in a provider in the body. If you would\n     * like to redirect to a custom url after successful or error connection,\n     * pass in your own custom redirect_url parameter.\n     * @throws {@link Vital.UnprocessableEntityError}\n     */\n    token(request, requestOptions) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const _response = yield core.fetcher({\n                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.VitalEnvironment.Production, \"v2/link/token\"),\n                method: \"POST\",\n                headers: {\n                    \"x-vital-api-key\": yield core.Supplier.get(this._options.apiKey),\n                    \"X-Fern-Language\": \"JavaScript\",\n                    \"X-Fern-SDK-Name\": \"@tryvital/vital-node\",\n                    \"X-Fern-SDK-Version\": \"3.1.2\",\n                },\n                contentType: \"application/json\",\n                body: yield serializers.LinkTokenExchange.jsonOrThrow(request, { unrecognizedObjectKeys: \"strip\" }),\n                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,\n            });\n            if (_response.ok) {\n                return yield serializers.LinkTokenExchangeResponse.parseOrThrow(_response.body, {\n                    unrecognizedObjectKeys: \"passthrough\",\n                    allowUnrecognizedUnionMembers: true,\n                    allowUnrecognizedEnumValues: true,\n                    breadcrumbsPrefix: [\"response\"],\n                });\n            }\n            if (_response.error.reason === \"status-code\") {\n                switch (_response.error.statusCode) {\n                    case 422:\n                        throw new Vital.UnprocessableEntityError(yield serializers.HttpValidationError.parseOrThrow(_response.error.body, {\n                            unrecognizedObjectKeys: \"passthrough\",\n                            allowUnrecognizedUnionMembers: true,\n                            allowUnrecognizedEnumValues: true,\n                            breadcrumbsPrefix: [\"response\"],\n                        }));\n                    default:\n                        throw new errors.VitalError({\n                            statusCode: _response.error.statusCode,\n                            body: _response.error.body,\n                        });\n                }\n            }\n            switch (_response.error.reason) {\n                case \"non-json\":\n                    throw new errors.VitalError({\n                        statusCode: _response.error.statusCode,\n                        body: _response.error.rawBody,\n                    });\n                case \"timeout\":\n                    throw new errors.VitalTimeoutError();\n                case \"unknown\":\n                    throw new errors.VitalError({\n                        message: _response.error.errorMessage,\n                    });\n            }\n        });\n    }\n    /**\n     * @throws {@link Vital.UnprocessableEntityError}\n     */\n    isTokenValid(request, requestOptions) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const _response = yield core.fetcher({\n                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.VitalEnvironment.Production, \"v2/link/token/isValid\"),\n                method: \"POST\",\n                headers: {\n                    \"x-vital-api-key\": yield core.Supplier.get(this._options.apiKey),\n                    \"X-Fern-Language\": \"JavaScript\",\n                    \"X-Fern-SDK-Name\": \"@tryvital/vital-node\",\n                    \"X-Fern-SDK-Version\": \"3.1.2\",\n                },\n                contentType: \"application/json\",\n                body: yield serializers.LinkTokenBase.jsonOrThrow(request, { unrecognizedObjectKeys: \"strip\" }),\n                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,\n            });\n            if (_response.ok) {\n                return yield serializers.link.isTokenValid.Response.parseOrThrow(_response.body, {\n                    unrecognizedObjectKeys: \"passthrough\",\n                    allowUnrecognizedUnionMembers: true,\n                    allowUnrecognizedEnumValues: true,\n                    breadcrumbsPrefix: [\"response\"],\n                });\n            }\n            if (_response.error.reason === \"status-code\") {\n                switch (_response.error.statusCode) {\n                    case 422:\n                        throw new Vital.UnprocessableEntityError(yield serializers.HttpValidationError.parseOrThrow(_response.error.body, {\n                            unrecognizedObjectKeys: \"passthrough\",\n                            allowUnrecognizedUnionMembers: true,\n                            allowUnrecognizedEnumValues: true,\n                            breadcrumbsPrefix: [\"response\"],\n                        }));\n                    default:\n                        throw new errors.VitalError({\n                            statusCode: _response.error.statusCode,\n                            body: _response.error.body,\n                        });\n                }\n            }\n            switch (_response.error.reason) {\n                case \"non-json\":\n                    throw new errors.VitalError({\n                        statusCode: _response.error.statusCode,\n                        body: _response.error.rawBody,\n                    });\n                case \"timeout\":\n                    throw new errors.VitalTimeoutError();\n                case \"unknown\":\n                    throw new errors.VitalError({\n                        message: _response.error.errorMessage,\n                    });\n            }\n        });\n    }\n    /**\n     * Generate a token to invite a user of Vital mobile app to your team\n     * @throws {@link Vital.UnprocessableEntityError}\n     */\n    codeCreate(request, requestOptions) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const { userId, expiresAt } = request;\n            const _queryParams = {};\n            _queryParams[\"user_id\"] = userId;\n            if (expiresAt != null) {\n                _queryParams[\"expires_at\"] = expiresAt.toISOString();\n            }\n            const _response = yield core.fetcher({\n                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.VitalEnvironment.Production, \"v2/link/code/create\"),\n                method: \"POST\",\n                headers: {\n                    \"x-vital-api-key\": yield core.Supplier.get(this._options.apiKey),\n                    \"X-Fern-Language\": \"JavaScript\",\n                    \"X-Fern-SDK-Name\": \"@tryvital/vital-node\",\n                    \"X-Fern-SDK-Version\": \"3.1.2\",\n                },\n                contentType: \"application/json\",\n                queryParameters: _queryParams,\n                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,\n            });\n            if (_response.ok) {\n                return yield serializers.VitalTokenCreatedResponse.parseOrThrow(_response.body, {\n                    unrecognizedObjectKeys: \"passthrough\",\n                    allowUnrecognizedUnionMembers: true,\n                    allowUnrecognizedEnumValues: true,\n                    breadcrumbsPrefix: [\"response\"],\n                });\n            }\n            if (_response.error.reason === \"status-code\") {\n                switch (_response.error.statusCode) {\n                    case 422:\n                        throw new Vital.UnprocessableEntityError(yield serializers.HttpValidationError.parseOrThrow(_response.error.body, {\n                            unrecognizedObjectKeys: \"passthrough\",\n                            allowUnrecognizedUnionMembers: true,\n                            allowUnrecognizedEnumValues: true,\n                            breadcrumbsPrefix: [\"response\"],\n                        }));\n                    default:\n                        throw new errors.VitalError({\n                            statusCode: _response.error.statusCode,\n                            body: _response.error.body,\n                        });\n                }\n            }\n            switch (_response.error.reason) {\n                case \"non-json\":\n                    throw new errors.VitalError({\n                        statusCode: _response.error.statusCode,\n                        body: _response.error.rawBody,\n                    });\n                case \"timeout\":\n                    throw new errors.VitalTimeoutError();\n                case \"unknown\":\n                    throw new errors.VitalError({\n                        message: _response.error.errorMessage,\n                    });\n            }\n        });\n    }\n    /**\n     * REQUEST_SOURCE: VITAL-LINK\n     * Start link token process\n     * @throws {@link Vital.UnprocessableEntityError}\n     */\n    startConnect(request, requestOptions) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const _response = yield core.fetcher({\n                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.VitalEnvironment.Production, \"v2/link/start\"),\n                method: \"POST\",\n                headers: {\n                    \"x-vital-api-key\": yield core.Supplier.get(this._options.apiKey),\n                    \"X-Fern-Language\": \"JavaScript\",\n                    \"X-Fern-SDK-Name\": \"@tryvital/vital-node\",\n                    \"X-Fern-SDK-Version\": \"3.1.2\",\n                },\n                contentType: \"application/json\",\n                body: yield serializers.BeginLinkTokenRequest.jsonOrThrow(request, { unrecognizedObjectKeys: \"strip\" }),\n                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,\n            });\n            if (_response.ok) {\n                return yield serializers.link.startConnect.Response.parseOrThrow(_response.body, {\n                    unrecognizedObjectKeys: \"passthrough\",\n                    allowUnrecognizedUnionMembers: true,\n                    allowUnrecognizedEnumValues: true,\n                    breadcrumbsPrefix: [\"response\"],\n                });\n            }\n            if (_response.error.reason === \"status-code\") {\n                switch (_response.error.statusCode) {\n                    case 422:\n                        throw new Vital.UnprocessableEntityError(yield serializers.HttpValidationError.parseOrThrow(_response.error.body, {\n                            unrecognizedObjectKeys: \"passthrough\",\n                            allowUnrecognizedUnionMembers: true,\n                            allowUnrecognizedEnumValues: true,\n                            breadcrumbsPrefix: [\"response\"],\n                        }));\n                    default:\n                        throw new errors.VitalError({\n                            statusCode: _response.error.statusCode,\n                            body: _response.error.body,\n                        });\n                }\n            }\n            switch (_response.error.reason) {\n                case \"non-json\":\n                    throw new errors.VitalError({\n                        statusCode: _response.error.statusCode,\n                        body: _response.error.rawBody,\n                    });\n                case \"timeout\":\n                    throw new errors.VitalTimeoutError();\n                case \"unknown\":\n                    throw new errors.VitalError({\n                        message: _response.error.errorMessage,\n                    });\n            }\n        });\n    }\n    /**\n     * REQUEST_SOURCE: VITAL-LINK\n     * Check link token state - can be hit continuously used as heartbeat\n     * @throws {@link Vital.UnprocessableEntityError}\n     *\n     * @example\n     *     await vital.link.tokenState({})\n     */\n    tokenState(request = {}, requestOptions) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const { vitalLinkToken } = request;\n            const _response = yield core.fetcher({\n                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.VitalEnvironment.Production, \"v2/link/state\"),\n                method: \"GET\",\n                headers: {\n                    \"x-vital-api-key\": yield core.Supplier.get(this._options.apiKey),\n                    \"X-Fern-Language\": \"JavaScript\",\n                    \"X-Fern-SDK-Name\": \"@tryvital/vital-node\",\n                    \"X-Fern-SDK-Version\": \"3.1.2\",\n                    \"x-vital-link-token\": vitalLinkToken != null ? vitalLinkToken : undefined,\n                },\n                contentType: \"application/json\",\n                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,\n            });\n            if (_response.ok) {\n                return yield serializers.link.tokenState.Response.parseOrThrow(_response.body, {\n                    unrecognizedObjectKeys: \"passthrough\",\n                    allowUnrecognizedUnionMembers: true,\n                    allowUnrecognizedEnumValues: true,\n                    breadcrumbsPrefix: [\"response\"],\n                });\n            }\n            if (_response.error.reason === \"status-code\") {\n                switch (_response.error.statusCode) {\n                    case 422:\n                        throw new Vital.UnprocessableEntityError(yield serializers.HttpValidationError.parseOrThrow(_response.error.body, {\n                            unrecognizedObjectKeys: \"passthrough\",\n                            allowUnrecognizedUnionMembers: true,\n                            allowUnrecognizedEnumValues: true,\n                            breadcrumbsPrefix: [\"response\"],\n                        }));\n                    default:\n                        throw new errors.VitalError({\n                            statusCode: _response.error.statusCode,\n                            body: _response.error.body,\n                        });\n                }\n            }\n            switch (_response.error.reason) {\n                case \"non-json\":\n                    throw new errors.VitalError({\n                        statusCode: _response.error.statusCode,\n                        body: _response.error.rawBody,\n                    });\n                case \"timeout\":\n                    throw new errors.VitalTimeoutError();\n                case \"unknown\":\n                    throw new errors.VitalError({\n                        message: _response.error.errorMessage,\n                    });\n            }\n        });\n    }\n    /**\n     * REQUEST_SOURCE: VITAL-LINK\n     * PROVIDER_TYPE: EMAIL-AUTH\n     * This function is hit by vital-link to authenticate a email provider.\n     * @throws {@link Vital.UnprocessableEntityError}\n     */\n    emailAuth(request, requestOptions) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const { vitalLinkToken } = request, _body = __rest(request, [\"vitalLinkToken\"]);\n            const _response = yield core.fetcher({\n                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.VitalEnvironment.Production, \"v2/link/auth/email\"),\n                method: \"POST\",\n                headers: {\n                    \"x-vital-api-key\": yield core.Supplier.get(this._options.apiKey),\n                    \"X-Fern-Language\": \"JavaScript\",\n                    \"X-Fern-SDK-Name\": \"@tryvital/vital-node\",\n                    \"X-Fern-SDK-Version\": \"3.1.2\",\n                    \"x-vital-link-token\": vitalLinkToken != null ? vitalLinkToken : undefined,\n                },\n                contentType: \"application/json\",\n                body: yield serializers.EmailAuthLink.jsonOrThrow(_body, { unrecognizedObjectKeys: \"strip\" }),\n                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,\n            });\n            if (_response.ok) {\n                return yield serializers.ConnectionStatus.parseOrThrow(_response.body, {\n                    unrecognizedObjectKeys: \"passthrough\",\n                    allowUnrecognizedUnionMembers: true,\n                    allowUnrecognizedEnumValues: true,\n                    breadcrumbsPrefix: [\"response\"],\n                });\n            }\n            if (_response.error.reason === \"status-code\") {\n                switch (_response.error.statusCode) {\n                    case 422:\n                        throw new Vital.UnprocessableEntityError(yield serializers.HttpValidationError.parseOrThrow(_response.error.body, {\n                            unrecognizedObjectKeys: \"passthrough\",\n                            allowUnrecognizedUnionMembers: true,\n                            allowUnrecognizedEnumValues: true,\n                            breadcrumbsPrefix: [\"response\"],\n                        }));\n                    default:\n                        throw new errors.VitalError({\n                            statusCode: _response.error.statusCode,\n                            body: _response.error.body,\n                        });\n                }\n            }\n            switch (_response.error.reason) {\n                case \"non-json\":\n                    throw new errors.VitalError({\n                        statusCode: _response.error.statusCode,\n                        body: _response.error.rawBody,\n                    });\n                case \"timeout\":\n                    throw new errors.VitalTimeoutError();\n                case \"unknown\":\n                    throw new errors.VitalError({\n                        message: _response.error.errorMessage,\n                    });\n            }\n        });\n    }\n    /**\n     * REQUEST_SOURCE: VITAL-LINK\n     * PROVIDER_TYPE: PASSWORD-AUTH\n     * This function is hit by vital-link to authenticate a password provider.\n     * @throws {@link Vital.UnprocessableEntityError}\n     */\n    passwordAuth(request, requestOptions) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const { vitalLinkClientRegion, vitalLinkToken } = request, _body = __rest(request, [\"vitalLinkClientRegion\", \"vitalLinkToken\"]);\n            const _response = yield core.fetcher({\n                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.VitalEnvironment.Production, \"v2/link/auth\"),\n                method: \"POST\",\n                headers: {\n                    \"x-vital-api-key\": yield core.Supplier.get(this._options.apiKey),\n                    \"X-Fern-Language\": \"JavaScript\",\n                    \"X-Fern-SDK-Name\": \"@tryvital/vital-node\",\n                    \"X-Fern-SDK-Version\": \"3.1.2\",\n                    \"x-vital-link-client-region\": vitalLinkClientRegion != null ? vitalLinkClientRegion : undefined,\n                    \"x-vital-link-token\": vitalLinkToken != null ? vitalLinkToken : undefined,\n                },\n                contentType: \"application/json\",\n                body: yield serializers.PasswordAuthLink.jsonOrThrow(_body, { unrecognizedObjectKeys: \"strip\" }),\n                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,\n            });\n            if (_response.ok) {\n                return yield serializers.ConnectionStatus.parseOrThrow(_response.body, {\n                    unrecognizedObjectKeys: \"passthrough\",\n                    allowUnrecognizedUnionMembers: true,\n                    allowUnrecognizedEnumValues: true,\n                    breadcrumbsPrefix: [\"response\"],\n                });\n            }\n            if (_response.error.reason === \"status-code\") {\n                switch (_response.error.statusCode) {\n                    case 422:\n                        throw new Vital.UnprocessableEntityError(yield serializers.HttpValidationError.parseOrThrow(_response.error.body, {\n                            unrecognizedObjectKeys: \"passthrough\",\n                            allowUnrecognizedUnionMembers: true,\n                            allowUnrecognizedEnumValues: true,\n                            breadcrumbsPrefix: [\"response\"],\n                        }));\n                    default:\n                        throw new errors.VitalError({\n                            statusCode: _response.error.statusCode,\n                            body: _response.error.body,\n                        });\n                }\n            }\n            switch (_response.error.reason) {\n                case \"non-json\":\n                    throw new errors.VitalError({\n                        statusCode: _response.error.statusCode,\n                        body: _response.error.rawBody,\n                    });\n                case \"timeout\":\n                    throw new errors.VitalTimeoutError();\n                case \"unknown\":\n                    throw new errors.VitalError({\n                        message: _response.error.errorMessage,\n                    });\n            }\n        });\n    }\n    /**\n     * This endpoint generates an OAuth link for oauth provider\n     * @throws {@link Vital.UnprocessableEntityError}\n     */\n    generateOauthLink(oauthProvider, request = {}, requestOptions) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const { vitalLinkToken } = request;\n            const _response = yield core.fetcher({\n                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.VitalEnvironment.Production, `v2/link/provider/oauth/${yield serializers.OAuthProviders.jsonOrThrow(oauthProvider)}`),\n                method: \"GET\",\n                headers: {\n                    \"x-vital-api-key\": yield core.Supplier.get(this._options.apiKey),\n                    \"X-Fern-Language\": \"JavaScript\",\n                    \"X-Fern-SDK-Name\": \"@tryvital/vital-node\",\n                    \"X-Fern-SDK-Version\": \"3.1.2\",\n                    \"x-vital-link-token\": vitalLinkToken != null ? vitalLinkToken : undefined,\n                },\n                contentType: \"application/json\",\n                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,\n            });\n            if (_response.ok) {\n                return yield serializers.Source.parseOrThrow(_response.body, {\n                    unrecognizedObjectKeys: \"passthrough\",\n                    allowUnrecognizedUnionMembers: true,\n                    allowUnrecognizedEnumValues: true,\n                    breadcrumbsPrefix: [\"response\"],\n                });\n            }\n            if (_response.error.reason === \"status-code\") {\n                switch (_response.error.statusCode) {\n                    case 422:\n                        throw new Vital.UnprocessableEntityError(yield serializers.HttpValidationError.parseOrThrow(_response.error.body, {\n                            unrecognizedObjectKeys: \"passthrough\",\n                            allowUnrecognizedUnionMembers: true,\n                            allowUnrecognizedEnumValues: true,\n                            breadcrumbsPrefix: [\"response\"],\n                        }));\n                    default:\n                        throw new errors.VitalError({\n                            statusCode: _response.error.statusCode,\n                            body: _response.error.body,\n                        });\n                }\n            }\n            switch (_response.error.reason) {\n                case \"non-json\":\n                    throw new errors.VitalError({\n                        statusCode: _response.error.statusCode,\n                        body: _response.error.rawBody,\n                    });\n                case \"timeout\":\n                    throw new errors.VitalTimeoutError();\n                case \"unknown\":\n                    throw new errors.VitalError({\n                        message: _response.error.errorMessage,\n                    });\n            }\n        });\n    }\n    /**\n     * This connects auth providers that are password based.\n     * @throws {@link Vital.UnprocessableEntityError}\n     */\n    connectPasswordProvider(provider, request, requestOptions) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const { vitalLinkClientRegion, vitalLinkToken } = request, _body = __rest(request, [\"vitalLinkClientRegion\", \"vitalLinkToken\"]);\n            const _response = yield core.fetcher({\n                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.VitalEnvironment.Production, `v2/link/provider/password/${yield serializers.PasswordProviders.jsonOrThrow(provider)}`),\n                method: \"POST\",\n                headers: {\n                    \"x-vital-api-key\": yield core.Supplier.get(this._options.apiKey),\n                    \"X-Fern-Language\": \"JavaScript\",\n                    \"X-Fern-SDK-Name\": \"@tryvital/vital-node\",\n                    \"X-Fern-SDK-Version\": \"3.1.2\",\n                    \"x-vital-link-client-region\": vitalLinkClientRegion != null ? vitalLinkClientRegion : undefined,\n                    \"x-vital-link-token\": vitalLinkToken != null ? vitalLinkToken : undefined,\n                },\n                contentType: \"application/json\",\n                body: yield serializers.IndividualProviderData.jsonOrThrow(_body, { unrecognizedObjectKeys: \"strip\" }),\n                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,\n            });\n            if (_response.ok) {\n                return yield serializers.ProviderLinkResponse.parseOrThrow(_response.body, {\n                    unrecognizedObjectKeys: \"passthrough\",\n                    allowUnrecognizedUnionMembers: true,\n                    allowUnrecognizedEnumValues: true,\n                    breadcrumbsPrefix: [\"response\"],\n                });\n            }\n            if (_response.error.reason === \"status-code\") {\n                switch (_response.error.statusCode) {\n                    case 422:\n                        throw new Vital.UnprocessableEntityError(yield serializers.HttpValidationError.parseOrThrow(_response.error.body, {\n                            unrecognizedObjectKeys: \"passthrough\",\n                            allowUnrecognizedUnionMembers: true,\n                            allowUnrecognizedEnumValues: true,\n                            breadcrumbsPrefix: [\"response\"],\n                        }));\n                    default:\n                        throw new errors.VitalError({\n                            statusCode: _response.error.statusCode,\n                            body: _response.error.body,\n                        });\n                }\n            }\n            switch (_response.error.reason) {\n                case \"non-json\":\n                    throw new errors.VitalError({\n                        statusCode: _response.error.statusCode,\n                        body: _response.error.rawBody,\n                    });\n                case \"timeout\":\n                    throw new errors.VitalTimeoutError();\n                case \"unknown\":\n                    throw new errors.VitalError({\n                        message: _response.error.errorMessage,\n                    });\n            }\n        });\n    }\n    /**\n     * This connects auth providers that are email based.\n     * @throws {@link Vital.UnprocessableEntityError}\n     */\n    connectEmailAuthProvider(provider, request, requestOptions) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const { vitalLinkToken } = request, _body = __rest(request, [\"vitalLinkToken\"]);\n            const _response = yield core.fetcher({\n                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.VitalEnvironment.Production, `v2/link/provider/email/${yield serializers.EmailProviders.jsonOrThrow(provider)}`),\n                method: \"POST\",\n                headers: {\n                    \"x-vital-api-key\": yield core.Supplier.get(this._options.apiKey),\n                    \"X-Fern-Language\": \"JavaScript\",\n                    \"X-Fern-SDK-Name\": \"@tryvital/vital-node\",\n                    \"X-Fern-SDK-Version\": \"3.1.2\",\n                    \"x-vital-link-token\": vitalLinkToken != null ? vitalLinkToken : undefined,\n                },\n                contentType: \"application/json\",\n                body: yield serializers.EmailProviderAuthLink.jsonOrThrow(_body, { unrecognizedObjectKeys: \"strip\" }),\n                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,\n            });\n            if (_response.ok) {\n                return yield serializers.ConnectionStatus.parseOrThrow(_response.body, {\n                    unrecognizedObjectKeys: \"passthrough\",\n                    allowUnrecognizedUnionMembers: true,\n                    allowUnrecognizedEnumValues: true,\n                    breadcrumbsPrefix: [\"response\"],\n                });\n            }\n            if (_response.error.reason === \"status-code\") {\n                switch (_response.error.statusCode) {\n                    case 422:\n                        throw new Vital.UnprocessableEntityError(yield serializers.HttpValidationError.parseOrThrow(_response.error.body, {\n                            unrecognizedObjectKeys: \"passthrough\",\n                            allowUnrecognizedUnionMembers: true,\n                            allowUnrecognizedEnumValues: true,\n                            breadcrumbsPrefix: [\"response\"],\n                        }));\n                    default:\n                        throw new errors.VitalError({\n                            statusCode: _response.error.statusCode,\n                            body: _response.error.body,\n                        });\n                }\n            }\n            switch (_response.error.reason) {\n                case \"non-json\":\n                    throw new errors.VitalError({\n                        statusCode: _response.error.statusCode,\n                        body: _response.error.rawBody,\n                    });\n                case \"timeout\":\n                    throw new errors.VitalTimeoutError();\n                case \"unknown\":\n                    throw new errors.VitalError({\n                        message: _response.error.errorMessage,\n                    });\n            }\n        });\n    }\n    /**\n     * GET List of all available providers given the generated link token.\n     * @throws {@link Vital.UnprocessableEntityError}\n     *\n     * @example\n     *     await vital.link.getAllProviders({})\n     */\n    getAllProviders(request = {}, requestOptions) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const { vitalLinkToken } = request;\n            const _response = yield core.fetcher({\n                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.VitalEnvironment.Production, \"v2/link/providers\"),\n                method: \"GET\",\n                headers: {\n                    \"x-vital-api-key\": yield core.Supplier.get(this._options.apiKey),\n                    \"X-Fern-Language\": \"JavaScript\",\n                    \"X-Fern-SDK-Name\": \"@tryvital/vital-node\",\n                    \"X-Fern-SDK-Version\": \"3.1.2\",\n                    \"x-vital-link-token\": vitalLinkToken != null ? vitalLinkToken : undefined,\n                },\n                contentType: \"application/json\",\n                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,\n            });\n            if (_response.ok) {\n                return yield serializers.link.getAllProviders.Response.parseOrThrow(_response.body, {\n                    unrecognizedObjectKeys: \"passthrough\",\n                    allowUnrecognizedUnionMembers: true,\n                    allowUnrecognizedEnumValues: true,\n                    breadcrumbsPrefix: [\"response\"],\n                });\n            }\n            if (_response.error.reason === \"status-code\") {\n                switch (_response.error.statusCode) {\n                    case 422:\n                        throw new Vital.UnprocessableEntityError(yield serializers.HttpValidationError.parseOrThrow(_response.error.body, {\n                            unrecognizedObjectKeys: \"passthrough\",\n                            allowUnrecognizedUnionMembers: true,\n                            allowUnrecognizedEnumValues: true,\n                            breadcrumbsPrefix: [\"response\"],\n                        }));\n                    default:\n                        throw new errors.VitalError({\n                            statusCode: _response.error.statusCode,\n                            body: _response.error.body,\n                        });\n                }\n            }\n            switch (_response.error.reason) {\n                case \"non-json\":\n                    throw new errors.VitalError({\n                        statusCode: _response.error.statusCode,\n                        body: _response.error.rawBody,\n                    });\n                case \"timeout\":\n                    throw new errors.VitalTimeoutError();\n                case \"unknown\":\n                    throw new errors.VitalError({\n                        message: _response.error.errorMessage,\n                    });\n            }\n        });\n    }\n    /**\n     * REQUEST_SOURCE: CUSTOMER\n     * PROVIDER_TYPE: MANUAL-PROVIDER\n     * This connects auth providers that are password based.\n     * @throws {@link Vital.UnprocessableEntityError}\n     */\n    connectManualProvider(provider, request, requestOptions) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const _response = yield core.fetcher({\n                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.VitalEnvironment.Production, `v2/link/provider/manual/${yield serializers.ManualProviders.jsonOrThrow(provider)}`),\n                method: \"POST\",\n                headers: {\n                    \"x-vital-api-key\": yield core.Supplier.get(this._options.apiKey),\n                    \"X-Fern-Language\": \"JavaScript\",\n                    \"X-Fern-SDK-Name\": \"@tryvital/vital-node\",\n                    \"X-Fern-SDK-Version\": \"3.1.2\",\n                },\n                contentType: \"application/json\",\n                body: yield serializers.ManualConnectionData.jsonOrThrow(request, { unrecognizedObjectKeys: \"strip\" }),\n                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,\n            });\n            if (_response.ok) {\n                return yield serializers.link.connectManualProvider.Response.parseOrThrow(_response.body, {\n                    unrecognizedObjectKeys: \"passthrough\",\n                    allowUnrecognizedUnionMembers: true,\n                    allowUnrecognizedEnumValues: true,\n                    breadcrumbsPrefix: [\"response\"],\n                });\n            }\n            if (_response.error.reason === \"status-code\") {\n                switch (_response.error.statusCode) {\n                    case 422:\n                        throw new Vital.UnprocessableEntityError(yield serializers.HttpValidationError.parseOrThrow(_response.error.body, {\n                            unrecognizedObjectKeys: \"passthrough\",\n                            allowUnrecognizedUnionMembers: true,\n                            allowUnrecognizedEnumValues: true,\n                            breadcrumbsPrefix: [\"response\"],\n                        }));\n                    default:\n                        throw new errors.VitalError({\n                            statusCode: _response.error.statusCode,\n                            body: _response.error.body,\n                        });\n                }\n            }\n            switch (_response.error.reason) {\n                case \"non-json\":\n                    throw new errors.VitalError({\n                        statusCode: _response.error.statusCode,\n                        body: _response.error.rawBody,\n                    });\n                case \"timeout\":\n                    throw new errors.VitalTimeoutError();\n                case \"unknown\":\n                    throw new errors.VitalError({\n                        message: _response.error.errorMessage,\n                    });\n            }\n        });\n    }\n    /**\n     * POST Connect the given Vital user to a demo provider.\n     * @throws {@link Vital.UnprocessableEntityError}\n     */\n    connectDemoProvider(request, requestOptions) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const _response = yield core.fetcher({\n                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.VitalEnvironment.Production, \"v2/link/connect/demo\"),\n                method: \"POST\",\n                headers: {\n                    \"x-vital-api-key\": yield core.Supplier.get(this._options.apiKey),\n                    \"X-Fern-Language\": \"JavaScript\",\n                    \"X-Fern-SDK-Name\": \"@tryvital/vital-node\",\n                    \"X-Fern-SDK-Version\": \"3.1.2\",\n                },\n                contentType: \"application/json\",\n                body: yield serializers.DemoConnectionCreationPayload.jsonOrThrow(request, {\n                    unrecognizedObjectKeys: \"strip\",\n                }),\n                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,\n                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,\n            });\n            if (_response.ok) {\n                return yield serializers.DemoConnectionStatus.parseOrThrow(_response.body, {\n                    unrecognizedObjectKeys: \"passthrough\",\n                    allowUnrecognizedUnionMembers: true,\n                    allowUnrecognizedEnumValues: true,\n                    breadcrumbsPrefix: [\"response\"],\n                });\n            }\n            if (_response.error.reason === \"status-code\") {\n                switch (_response.error.statusCode) {\n                    case 422:\n                        throw new Vital.UnprocessableEntityError(yield serializers.HttpValidationError.parseOrThrow(_response.error.body, {\n                            unrecognizedObjectKeys: \"passthrough\",\n                            allowUnrecognizedUnionMembers: true,\n                            allowUnrecognizedEnumValues: true,\n                            breadcrumbsPrefix: [\"response\"],\n                        }));\n                    default:\n                        throw new errors.VitalError({\n                            statusCode: _response.error.statusCode,\n                            body: _response.error.body,\n                        });\n                }\n            }\n            switch (_response.error.reason) {\n                case \"non-json\":\n                    throw new errors.VitalError({\n                        statusCode: _response.error.statusCode,\n                        body: _response.error.rawBody,\n                    });\n                case \"timeout\":\n                    throw new errors.VitalTimeoutError();\n                case \"unknown\":\n                    throw new errors.VitalError({\n                        message: _response.error.errorMessage,\n                    });\n            }\n        });\n    }\n}\nexports.Link = Link;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}