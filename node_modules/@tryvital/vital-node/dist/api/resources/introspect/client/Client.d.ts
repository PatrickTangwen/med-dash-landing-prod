/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import * as Vital from "../../..";
export declare namespace Introspect {
    interface Options {
        environment?: core.Supplier<environments.VitalEnvironment | string>;
        apiKey: core.Supplier<string>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
    }
}
export declare class Introspect {
    protected readonly _options: Introspect.Options;
    constructor(_options: Introspect.Options);
    /**
     * @throws {@link Vital.UnprocessableEntityError}
     *
     * @example
     *     await vital.introspect.getUserResources({
     *         provider: Vital.Providers.Oura
     *     })
     */
    getUserResources(request?: Vital.IntrospectGetUserResourcesRequest, requestOptions?: Introspect.RequestOptions): Promise<Vital.UserResourcesResponse>;
    /**
     * @throws {@link Vital.UnprocessableEntityError}
     *
     * @example
     *     await vital.introspect.getUserHistoricalPulls({
     *         provider: Vital.Providers.Oura
     *     })
     */
    getUserHistoricalPulls(request?: Vital.IntrospectGetUserHistoricalPullsRequest, requestOptions?: Introspect.RequestOptions): Promise<Vital.UserHistoricalPullsResponse>;
}
